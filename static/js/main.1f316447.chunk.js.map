{"version":3,"sources":["API/api.js","redux/dialog-reducer.js","components/Sidebar/Sidebar.module.css","components/Sidebar/Navbar/Navbar.module.css","assets/images/user.png","assets/images/preloader.gif","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/ProfileForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Users/Users.module.css","components/Sidebar/WidgetFriends/widgetFriends.module.css","serviceWorker.js","components/Sidebar/Navbar/ItemsMenu/ItemMenu.js","components/Sidebar/Navbar/Navbar.jsx","components/Sidebar/Navbar/NavbarContainer.jsx","components/Sidebar/WidgetFriends/Friend/Friend.jsx","components/Sidebar/WidgetFriends/widgetFriends.jsx","components/Sidebar/WidgetFriends/widgetFriendsContainer.jsx","components/Sidebar/Sidebar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/users-reducer.js","components/Users/User/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/WithLazyLoad.js","App.js","assets/fontawesome/index.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControls/FormsControls.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","redux/profile-reducer.js","components/Sidebar/Navbar/ItemsMenu/ItemMenu.module.css"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","uploadUsers","currentPage","amountUsersOnPage","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getUserProfile","getProfileStatus","updateProfileStatus","status","put","authAPI","Me","login","formData","logout","initialState","dialogs","id","name","messagues","message","addDialogMessage","messageText","type","dialogReducer","state","action","module","exports","Post","props","className","s","avatar","src","item","like","CountLike","maxLength10","maxLengthCreator","compose","reduxForm","form","add_post","onSubmit","handleSubmit","Field","el","component","FormControl","validate","required","MyPosts","postElements","postData","map","postElem","key","container","title","value","addPost","profileMessage","Boolean","window","location","hostname","match","Navbar","to","url","activeClassName","active","itemMenu","ItemMenu","nav","NavbarContainer","connect","sidebarPage","dispatch","Friend","friend","Friends","friends","friends_container","friends_item","FriendsContainer","Sidebar","sidebar","News","Music","Settings","users","totalCount","isFetching","followingProccess","fake","subscribeSuccses","subscribe","setUsers","changePage","setIsFetching","setFollowingProccess","isFollowing","followUnfollowFlow","requestMethod","a","resultCode","usersReducer","u","followed","filter","User","dataUser","photos","user","small","userPhoto","disabled","some","ids","onClick","full_name","description","country","city","Paginator","step","visiblePages","pagesCount","Math","ceil","useState","firstPage","setFirstPage","lastPage","setlastPage","pages","i","push","navigation","icon","p","classNames","classnames","page","selectedPage","Users","users_container","getUsers","usersPage","getCurrentPage","getAmountUsersOnPage","getTotalCount","getIsFetching","getFollowingProccess","UsersContainer","pageSize","console","log","this","length","Preloader","bind","PureComponent","items","Header","header","logo","isAuth","email","blocked","setAuthUserData","userData","setProccessing","messages","authReducer","HeaderContainer","React","Component","auth","error","Login","infoMessage","LoginContainer","stopSubmit","_error","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialoguesPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","withSuspense","Suspense","fallback","DialoguesContainer","lazy","ProfileContainer","App","initializedApp","path","render","AppContainer","withRouter","promise","Promise","all","SocNetApp","StrictMode","library","add","faAngleDoubleLeft","faAngleDoubleRight","setInterval","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","input","meta","touched","hasError","formControl","createElement","maxLength","profile","curentUserId","setProfileStatus"],"mappings":"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","file":"static/js/main.1f316447.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create ({\r\n    withCredentials : true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"7502e7c7-e7e1-4cad-a682-eb1547e7366d\"\r\n    }\r\n\r\n});\r\n\r\nexport const usersAPI = {\r\n    uploadUsers(currentPage = 1, amountUsersOnPage = 5){\r\n        return instance.get(`users?page=${currentPage}&count=${amountUsersOnPage}`)\r\n            .then( response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    follow(userId = 1){\r\n        return instance.post(`follow/${userId}`)\r\n            .then( response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    unfollow(userId = 1){\r\n        return instance.delete(`follow/${userId}`)\r\n            .then( response => {\r\n                return response.data;\r\n            })\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId){\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getProfileStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateProfileStatus(status){\r\n        return instance.put(`profile/status/`, {status: status})\r\n            .then( response => {\r\n                return response.data;\r\n            })\r\n    },\r\n};\r\n\r\nexport const authAPI = {\r\n    Me(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(formData){\r\n        return instance.post(`auth/login`, {...formData})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n","const ADD_DIALOG_MESSAGE = 'ADD-DIALOG-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Kostya'},\r\n        {id: 2, name: 'Sonya'},\r\n        {id: 3, name: 'Roma'},\r\n        {id: 4, name: 'Den'},\r\n        {id: 5, name: 'Vlad'},\r\n        {id: 6, name: 'Ira'}\r\n    ],\r\n    messagues: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Hello'},\r\n        {id: 3, message: 'My name is Dima'},\r\n        {id: 4, message: 'Ok'}\r\n    ]\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n\r\n    /*switch (action.type) {\r\n        case ADD_DIALOG_MESSAGE: {\r\n            let newMessage = {\r\n                id: 5,\r\n                message: state.newMessageText,\r\n            };\r\n            let stateCopy = {...state};\r\n            stateCopy.messagues = [...state.messagues];\r\n            stateCopy.messagues.push(newMessage);\r\n            stateCopy.newMessageText = '';\r\n            return stateCopy;\r\n        }\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            let stateCopy = {...state};\r\n            stateCopy.newMessageText = action.messageText;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }*/\r\n\r\n    switch (action.type) {\r\n        case ADD_DIALOG_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messagues: [...state.messagues, {id: 5, message: action.messageText}],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addDialogMessage = (messageText) => ({type : ADD_DIALOG_MESSAGE, messageText});\r\n\r\nexport default dialogReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__1Gq0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__13hko\"};","module.exports = __webpack_public_path__ + \"static/media/user.d3758a57.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.66ae5675.gif\";","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.avatar}>\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTAlBE22hhq5xbZOK5a7R57FtiyqrbCgxGqBw&usqp=CAU\"/>\r\n            </div>\r\n            <div className={s.item}>{props.message}</div>\r\n            <div className={s.like}>like {props.CountLike}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {FormControl} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst ProfileForm = (props) => {\r\n    return (\r\n        <div className={s.add_post}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field el={\"textarea\"} name=\"profileMessage\" component={FormControl} validate={[required, maxLength10]}/>\r\n                <button>Add post</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose(reduxForm({form: 'profile'}))(ProfileForm);\r\n\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport ProfileForm from \"./ProfileForm\";\r\n\r\nfunction MyPosts(props) {\r\n\r\n    let postElements = props.postData.map( postElem => <Post message={postElem.message} CountLike={postElem.CountLike} key={postElem.id}/>);\r\n\r\n    let onSubmit = (value) => {\r\n        props.addPost(value.profileMessage)\r\n    };\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <h3 className={s.title}>My posts</h3>\r\n            <ProfileForm onSubmit={onSubmit}/>\r\n            {postElements}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_container\":\"Users_users_container__2nebU\",\"user\":\"Users_user__1aWT_\",\"location\":\"Users_location__2mCR2\",\"navigation\":\"Users_navigation__2crWy\",\"selectedPage\":\"Users_selectedPage__1TASI\",\"page\":\"Users_page__JFPRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends_container\":\"widgetFriends_friends_container__3CcWI\",\"title\":\"widgetFriends_title__38KKE\",\"friends_item\":\"widgetFriends_friends_item__2B_B_\",\"friend\":\"widgetFriends_friend__22iyp\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './ItemMenu.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <div className={s.item}>\r\n            <NavLink to={props.url} activeClassName={s.active}>{props.title}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport ItemMenu from \"./ItemsMenu/ItemMenu\";\r\n\r\nfunction Navbar(props) {\r\n    let itemMenu = props.itemMenu.map(item => <ItemMenu url={item.url} title={item.title} key={item.id}/>);\r\n    return (\r\n        <nav className={s.nav}>\r\n            {itemMenu}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\n// import StoreContext from \"../../../storeContext\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"../../Profile/MyPosts/MyPosts\";\r\n\r\n/*function NavbarContainer(props) {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    let state = store.getState();\r\n                    return <Navbar itemMenu={state.sidebarPage.itemMenu}/>\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n    );\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        itemMenu: state.sidebarPage.itemMenu\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nconst NavbarContainer  = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","import React from 'react';\r\nimport s from '../widgetFriends.module.css';\r\n\r\nfunction Friend(props) {\r\n\r\n    return (\r\n        <div className={s.friend}>\r\n            <img className={s.avatar} src=\"https://99px.ru/sstorage/56/2019/09/mid_324597_239159.jpg\"/>\r\n            <h5 className={s.name}>{props.name}</h5>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './widgetFriends.module.css';\r\nimport Friend from \"./Friend/Friend\"\r\n\r\nfunction Friends(props) {\r\n\r\n    let friends = props.friends.map(friend => <Friend name={friend.name} key={friend.id}/>);\r\n\r\n    return (\r\n         <div className={s.friends_container}>\r\n             <h3 className={s.title}>Friends</h3>\r\n             <div className={s.friends_item}>\r\n                 {friends}\r\n             </div>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\n// import StoreContext from \"../../../storeContext\";\r\nimport Friends from \"./widgetFriends\";\r\nimport {connect} from \"react-redux\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\n/*function FriendsContainer(props) {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    let state = store.getState();\r\n                    return <Friends friends={state.sidebarPage.friends}/>\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n    );\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebarPage.friends\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nconst FriendsContainer  = connect(mapStateToProps, mapDispatchToProps)(Friends);\r\n\r\nexport default FriendsContainer;\r\n","import React from 'react';\r\nimport s from './Sidebar.module.css';\r\nimport NavbarContainer from \"./Navbar/NavbarContainer\";\r\nimport FriendsContainer from \"./WidgetFriends/widgetFriendsContainer\";\r\n\r\nfunction Sidebar(props) {\r\n    return (\r\n        <div className={s.sidebar}>\r\n            <NavbarContainer/>\r\n            <FriendsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n import s from './News.module.css';\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import {usersAPI} from \"../API/api\";\r\n\r\nconst SUBSCRIBE = 'SUBSCRIBE';\r\nconst SET_USERS = 'SET_USERS';\r\nconst CHANGE_PAGE = 'CHANGE_PAGE';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst IS_FETCHING = 'IS_FETCHING';\r\nconst FOLLOWING_PROCCESS = 'FOLLOWING_PROCCESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    currentPage: 1,\r\n    amountUsersOnPage: 5,\r\n    totalCount: 20,\r\n    isFetching: false,\r\n    followingProccess: [],\r\n    fake: 1\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SUBSCRIBE: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: action.subscribe}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }\r\n        case \"FAKE\": {\r\n            return {\r\n                ...state,\r\n                fake: state.fake\r\n            };\r\n        }\r\n/*        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }*/\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case CHANGE_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        }\r\n        case IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case FOLLOWING_PROCCESS: {\r\n            return {\r\n                ...state,\r\n                followingProccess: action.isFollowing\r\n                    ? [...state.followingProccess, action.userId]\r\n                    : state.followingProccess.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const subscribeSuccses = (userId, subscribe) =>\r\n    ({type: SUBSCRIBE, userId, subscribe});\r\nexport const setUsers = (users) =>\r\n    ({type: SET_USERS, users: users});\r\nexport const changePage = (currentPage) =>\r\n    ({type: CHANGE_PAGE, currentPage: currentPage});\r\nexport const setTotalCount = (count) =>\r\n    ({type: SET_TOTAL_COUNT, totalCount: count});\r\nexport const setIsFetching = (isFetching) =>\r\n    ({type: IS_FETCHING, isFetching});\r\nexport const setFollowingProccess = (isFollowing, userId) =>\r\n    ({type: FOLLOWING_PROCCESS, isFollowing, userId});\r\n\r\n\r\nexport const uploadUsers = (currentPage, amountUsersOnPage) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        dispatch(changePage(currentPage));\r\n        let response = await usersAPI.uploadUsers(currentPage, amountUsersOnPage);\r\n            dispatch(setUsers(response.items));\r\n            dispatch(setTotalCount(response.totalCount));\r\n            dispatch(setIsFetching(false));\r\n    }\r\n};\r\n\r\nexport const followUnfollowFlow = (dispatch, requestMethod, subscribe, userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(setFollowingProccess(true, userId));\r\n        let response = await requestMethod(userId);\r\n            if (response.resultCode === 0) {\r\n                dispatch(subscribeSuccses(userId, subscribe))\r\n            }\r\n            dispatch(setFollowingProccess(false, userId));\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => (dispatch) => {\r\n    dispatch(followUnfollowFlow(dispatch, usersAPI.unfollow.bind(usersAPI), false, userId));\r\n};\r\nexport const follow = (userId) => (dispatch) => {\r\n    dispatch(followUnfollowFlow(dispatch, usersAPI.follow.bind(usersAPI), true, userId));\r\n};\r\n\r\nexport default usersReducer;\r\n","import React from 'react';\r\nimport s from '../Users.module.css';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../../API/api\";\r\n\r\nfunction User({dataUser: {photos, id, followed, name, status},\r\n                  followingProccess, follow, unfollow, ...props}) {\r\n    return (\r\n        <div className={s.user}>\r\n            <div>\r\n                <NavLink to={'/profile/' + id}>\r\n                    <img src={photos.small != null ? photos.small : userPhoto}/>\r\n                </NavLink>\r\n                {\r\n                    followed\r\n                        ? <button disabled={followingProccess.some(ids => ids === id)} onClick={() => {\r\n                            unfollow(id)\r\n                        }}>Unfollow</button>\r\n                        :\r\n                        <button disabled={followingProccess.some(ids => ids === id)} onClick={() => {\r\n                            follow(id)\r\n                        }}>Follow</button>\r\n                }\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <h2 className={s.full_name}>{name}</h2>\r\n                    <span className={s.description}>{status}</span>\r\n                </div>\r\n                <div className={s.location}>\r\n                    <div className={s.country}>\r\n                        {\"props.location.country\"}\r\n                    </div>\r\n                    <div className={s.city}>\r\n                        {\"props.location.city\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;\r\n","import s from \"../../Users/Users.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome/index\";\r\nimport * as classnames from \"classnames\";\r\n\r\nlet Paginator = ({totalCount, amountUsersOnPage, currentPage, changePage, step = 10, visiblePages = 4,  ...props}) => {\r\n\r\n    let pagesCount = Math.ceil(totalCount / amountUsersOnPage);\r\n\r\n    const [firstPage, setFirstPage] = useState(1);\r\n    const [lastPage, setlastPage] = useState(visiblePages);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = firstPage; i <= lastPage; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const decreasePage = () => {\r\n        firstPage - step >= 1 ? setFirstPage(firstPage - step) : setFirstPage(1);\r\n        lastPage - step >= visiblePages ? setlastPage(lastPage - step) : setlastPage(visiblePages);\r\n    };\r\n\r\n    const increasePage = () => {\r\n        firstPage + step <= pagesCount - visiblePages ? setFirstPage(firstPage + step) : setFirstPage(pagesCount - visiblePages);\r\n        lastPage + step <= pagesCount ? setlastPage(lastPage + step) : setlastPage(pagesCount);\r\n    };\r\n\r\n    return (\r\n        <div className={s.navigation}>\r\n            { firstPage !== 1 && <button onClick={decreasePage}><FontAwesomeIcon icon=\"angle-double-left\" /></button>}\r\n            {pages.map((p) => {\r\n                let classNames = classnames(s.page, currentPage === p ? s.selectedPage : '');\r\n                return <span className={classNames}\r\n                             onClick={() => {\r\n                                 changePage(p)\r\n                             }}\r\n                             key={p}\r\n                >{p}</span>\r\n            })}\r\n            { lastPage !== pagesCount && <button onClick={increasePage}><FontAwesomeIcon icon=\"angle-double-right\" /></button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;\r\n","import User from \"./User/User\";\r\nimport s from \"./Users.module.css\";\r\nimport React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\n\r\nlet Users = (props) => {\r\n    let users = props.users.map(user =>\r\n        <User dataUser={user}\r\n              {...props}\r\n        />);\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalCount={props.totalCount}\r\n                       amountUsersOnPage={props.amountUsersOnPage}\r\n                       currentPage={props.currentPage}\r\n                       changePage={props.changePage}\r\n                       step={10}\r\n                       visiblePages={4}\r\n            />\r\n            <div className={s.users_container}>\r\n                {users}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getAmountUsersOnPage = (state) => {\r\n    return state.usersPage.amountUsersOnPage;\r\n}\r\nexport const getTotalCount = (state) => {\r\n    return state.usersPage.totalCount;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingProccess = (state) => {\r\n    return state.usersPage.followingProccess;\r\n}\r\n","import React, {PureComponent} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    changePage,\r\n    follow, uploadUsers,\r\n    setUsers,\r\n    unfollow\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getAmountUsersOnPage,\r\n    getCurrentPage,\r\n    getFollowingProccess,\r\n    getIsFetching,\r\n    getTotalCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\n\r\n\r\nclass UsersContainer extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        console.log('ComponentUsers')\r\n        if (this.props.users.length === 0){\r\n            this.props.uploadUsers(this.props.currentPage, this.props.amountUsersOnPage)\r\n        }\r\n    }\r\n\r\n    changePage = (page) => {\r\n        let {pageSize} = this.props.amountUsersOnPage;\r\n        this.props.uploadUsers(page, pageSize)\r\n    };\r\n\r\n    render() {\r\n        console.log('Render-Users')\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users\r\n                users={this.props.users}\r\n                totalCount={this.props.totalCount}\r\n                amountUsersOnPage={this.props.amountUsersOnPage}\r\n                currentPage={this.props.currentPage}\r\n                changePage={this.changePage.bind(this)}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingProccess={this.props.followingProccess}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    console.log('mapStateToPropsUsers')\r\n    return {\r\n        users: getUsers(state),\r\n        currentPage: getCurrentPage(state),\r\n        amountUsersOnPage: getAmountUsersOnPage(state),\r\n        totalCount: getTotalCount(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProccess: getFollowingProccess(state),\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { follow, unfollow, setUsers, uploadUsers })\r\n)(UsersContainer);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.logo}>SocNet</div>\r\n            {props.isAuth ?\r\n                <div>\r\n                    <span className={s.login}>{props.login}</span>\r\n                    <button onClick={props.logout}>Logout</button>\r\n                </div>\r\n                :\r\n                <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import {authAPI} from \"../API/api\";\r\nimport React from \"react\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_PROCCESSING = 'SET_PROCCESSING';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    blocked: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.userData\r\n            }\r\n        }\r\n        case SET_PROCCESSING: {\r\n            return {\r\n                ...state,\r\n                blocked: action.blocked\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    userData: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const setProccessing = (blocked) =>\r\n    ({type: SET_PROCCESSING, blocked});\r\n\r\n\r\nexport const chekAuthMe = () => async (dispatch) => {\r\n    let response = await authAPI.Me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (formData) => {\r\n    return async (dispatch) => {\r\n        dispatch(setProccessing(true));\r\n        let response = await authAPI.login(formData);\r\n            if (response.data.resultCode === 0) {\r\n                let response = await authAPI.Me();\r\n                    if (response.data.resultCode === 0) {\r\n                        let {id, email, login} = response.data.data;\r\n                        dispatch(setAuthUserData(id, email, login, true));\r\n                    }\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some ERROR\";\r\n                let action = stopSubmit(\"login\", {_error: message});\r\n                dispatch(action);\r\n            }\r\n            dispatch(setProccessing(false));\r\n    }\r\n};\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        dispatch(setProccessing(true));\r\n        let response = await authAPI.logout();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            } else if (response.data.resultCode === 1) {\r\n                console.log(response.data.messages[0])\r\n            }\r\n            dispatch(setProccessing(false));\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logout}))\r\n    (HeaderContainer);\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {FormControl} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field el={\"input\"} name={\"email\"} type={\"text\"} component={FormControl} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field el={\"input\"} name={\"password\"} type={\"text\"} component={FormControl}/>\r\n            </div>\r\n            <div>\r\n                <Field el={\"input\"} name={\"rememberMe\"} type={\"checkbox\"} component={FormControl}/>\r\n            </div>\r\n            <div>\r\n                {!props.isAuth ?\r\n                    <button disabled={props.blocked}>Login</button>\r\n                    :\r\n                    <button disabled={props.blocked}\r\n                            onClick={props.logout}\r\n                    >Logout</button>\r\n                }\r\n            </div>\r\n            { props.error &&\r\n                <div className={s.error}>{props.error}</div>\r\n            }\r\n            {props.blocked ? <div>Loading...</div> : ''}\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default compose(reduxForm({form: 'login'}))(LoginForm);\r\n\r\n\r\n","import React from 'react';\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nfunction Login(props) {\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={props.login}\r\n                       logout={props.logout}\r\n                       blocked={props.blocked}\r\n                       infoMessage={props.infoMessage}\r\n                       isAuth={props.isAuth}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport Login from \"./Login\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        blocked: state.auth.blocked,\r\n        infoMessage: state.auth.infoMessage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nconst LoginContainer = compose(connect(mapStateToProps, {login, logout}))(Login);\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport {chekAuthMe} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () =>\r\n    ({type : SET_INITIALIZED});\r\n\r\nexport const initializedApp = () => (dispatch) => {\r\n    let promise = dispatch(chekAuthMe());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\n\r\nexport default appReducer;\r\n","\r\nlet initialState = {\r\n    itemMenu: [\r\n        {url: '/profile', title: 'Profile'},\r\n        {url: '/messages', title: 'Messages'},\r\n        {url: '/users', title: 'Users'},\r\n        {url: '/login', title: 'Login'},\r\n        {url: '/news', title: 'News'},\r\n        {url: '/music', title: 'Music'},\r\n        {url: '/settings', title: 'Settings'}\r\n    ],\r\n    friends: [\r\n        {id: 1, name: 'Roma'},\r\n        {id: 2, name: 'Dima'},\r\n        {id: 3, name: 'Den'}\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialoguesPage: dialogReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(reducers,\r\n    composeEnhancers(applyMiddleware(thunkMiddleware)),\r\n    );\r\nwindow._store_ = store;\r\n\r\nexport default store;\r\n\r\n\r\n","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n/*export const WithLazyLoad = ({component, ...props}) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            {React.createElement(component, {...props}, null)}\r\n        </React.Suspense>\r\n}*/\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n};\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Sidebar from \"./components/Sidebar/Sidebar\"\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializedApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/WithLazyLoad\";\r\n\r\nconst DialoguesContainer = React.lazy(() => import('./components/Dialogues/DialoguesContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializedApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        } else {\r\n            return (\r\n                <div className=\"App\">\r\n                    <div className=\"app_wrapper\">\r\n                        <HeaderContainer/>\r\n                        <Sidebar/>\r\n                        <div className=\"app_wrapper_content\">\r\n                            <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\r\n                            <Route path=\"/messages\" render={withSuspense(DialoguesContainer)}\r\n                            />\r\n                            <Route path=\"/news\" render={() => <News/>}/>\r\n                            <Route path=\"/music\" render={() => <Music/>}/>\r\n                            <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                            <Route path=\"/login\" render={() => <LoginContainer/>}/>\r\n                            <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n};\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        initializedApp\r\n    }))(App);\r\n\r\nconst SocNetApp = (props) => {\r\n    return <React.StrictMode>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <AppContainer />\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </React.StrictMode>\r\n}\r\n\r\nexport default SocNetApp;\r\n\r\n\r\n","import { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nimport { faAngleDoubleLeft, faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n    faAngleDoubleLeft,\r\n    faAngleDoubleRight\r\n);\r\n","import * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport SocNetApp from \"./App\";\r\nimport \"./assets/fontawesome/index\"\r\nimport store from \"./redux/redux-store\";\r\n\r\nsetInterval(() => {store.dispatch({type: \"FAKE\"})},1000);\r\n/*import {Provider} from \"./storeContext\";*/\r\n\r\nReactDOM.render(<SocNetApp />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div><img src={preloader} /></div>\r\n}\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\n\r\nexport const FormControl = ({el, input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : '')}>\r\n            <div>{React.createElement(el, {...input, ...props}, null)}</div>\r\n            {  hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required'\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyPosts_container__F2JpE\",\"title\":\"MyPosts_title__I760M\",\"add_post\":\"MyPosts_add_post__35SE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2vpAT\",\"error\":\"FormsControls_error__HCxxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1-UEE\",\"item\":\"Post_item__302tf\",\"avatar\":\"Post_avatar__3XCoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3RkmZ\",\"logo\":\"Header_logo__140or\",\"login\":\"Header_login__29bD8\"};","import {profileAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_PROFILE_STATUS = 'SET_PROFILE_STATUS';\r\n\r\nlet initialState = {\r\n    post: [\r\n        {id: 1, message: 'Hello', CountLike: 12},\r\n        {id: 2, message: 'Hello, how are you', CountLike: 5},\r\n        {id: 3, message: 'I`m ok', CountLike: 16}\r\n    ],\r\n    profile: null,\r\n    curentUserId: null,\r\n    status: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                post: [...state.post, {id: 4, message: action.message, CountLike: 0}],\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                post: state.post.filter(p => p.id != action.id),\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_PROFILE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (message) => ({type : ADD_POST, message});\r\nexport const deletePost = (id) => ({type : DELETE_POST, id});\r\nexport const setUserProfile = (userdata) =>\r\n    ({type: SET_USER_PROFILE, profile: userdata});\r\nexport const setProfileStatus = (status) =>\r\n    ({type: SET_PROFILE_STATUS, status});\r\n\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n        let response = await profileAPI.getUserProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getProfileStatus = (userId) => async (dispatch) => {\r\n        let response = await profileAPI.getProfileStatus(userId);\r\n        dispatch(setProfileStatus(response.data));\r\n\r\n};\r\nexport const updateProfileStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateProfileStatus(status);\r\n    if (response.resultCode === 0){\r\n        dispatch(setProfileStatus(status));\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemMenu_item__3qwyA\",\"active\":\"ItemMenu_active__21hPO\"};"],"sourceRoot":""}