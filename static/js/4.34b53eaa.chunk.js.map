{"version":3,"sources":["components/Dialogues/Dialogues.module.css","components/Dialogues/DialogsItem/DialoguesItem.jsx","components/Dialogues/MessagesItem/MessagesItem.jsx","components/Dialogues/DialogForm.jsx","components/Dialogues/Dialogues.jsx","hoc/withAuthRedirect.js","components/Dialogues/DialoguesContainer.jsx"],"names":["module","exports","DialoguesItem","props","path","id","className","s","dialog","avatar","src","to","name","MessagesItem","message","maxLength100","maxLengthCreator","compose","reduxForm","form","add_massage","onSubmit","handleSubmit","Field","el","component","FormControl","validate","required","Dialogues","dialogs","map","key","messagues","dialogues","dialogues_item","container","messages","value","addDialogMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","auth","DialoguesContainer","Component","RedirectComponent","this","React","connect","dialoguesPage"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,eAAiB,kCAAkC,OAAS,0BAA0B,OAAS,0BAA0B,OAAS,0BAA0B,UAAY,6BAA6B,SAAW,4BAA4B,QAAU,2BAA2B,YAAc,iC,+FCc3UC,MAXf,SAAuBC,GACnB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKF,UAAWC,IAAEE,OAAQC,IAAI,8DAC9B,kBAAC,IAAD,CAASC,GAAIP,GAAOD,EAAMS,QCAvBC,MANf,SAAsBV,GAClB,OACI,yBAAKG,UAAWC,IAAEO,SAAS,2BAAIX,EAAMW,W,yCCEvCC,EAAeC,YAAiB,KAavBC,cAAQC,YAAU,CAACC,KAAM,kBAAzBF,EAXI,SAACd,GAChB,OACI,yBAAKG,UAAWC,IAAEa,aACd,0BAAMC,SAAUlB,EAAMmB,cAClB,kBAACC,EAAA,EAAD,CAAOC,GAAI,WAAYZ,KAAK,UAAUa,UAAWC,IAAaC,SAAU,CAACC,IAAUb,KACnF,oDCmBDc,MA3Bf,SAAmB1B,GAEf,IAAI2B,EAAU3B,EAAM2B,QAAQC,KAAI,SAAAvB,GAAM,OAAI,kBAAC,EAAD,CAAeH,GAAIG,EAAOH,GAAIO,KAAMJ,EAAOI,KAAMoB,IAAKxB,EAAOH,QACnG4B,EAAY9B,EAAM8B,UAAUF,KAAI,SAAAjB,GAAO,OAAI,kBAAC,EAAD,CAAcA,QAASA,EAAQA,QAASkB,IAAKlB,EAAQT,QAMpG,OACI,yBAAKC,UAAWC,IAAE2B,WACd,yBAAK5B,UAAWC,IAAE4B,gBACbL,GAEL,yBAAKxB,UAAWC,IAAE6B,WACd,yBAAK9B,UAAWC,IAAE8B,UACbJ,GAEL,kBAAC,EAAD,CAAYZ,SAbT,SAACiB,GACZnC,EAAMoC,iBAAiBD,EAAMxB,UAaT0B,eAAgBrC,EAAMqC,eACtBD,iBAAkBpC,EAAMoC,sB,+CCrBhDE,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SCoDrBE,EAAqB5B,aDhDK,SAAC6B,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAK7C,MAAMwC,OACT,kBAACG,EAAcE,KAAK7C,OADI,kBAAC,IAAD,CAAUQ,GAAI,eAJV,GAEXsC,IAAMH,WAQtC,OAFmCI,YAAQT,EAARS,CAAoCH,KC0CvEG,aAtBkB,SAACR,GACnB,MAAO,CACHZ,QAASY,EAAMS,cAAcrB,QAC7BU,eAAgBE,EAAMS,cAAcX,eACpCP,UAAWS,EAAMS,cAAclB,aAkBV,CAACM,uBAFHtB,CAGzBY,GAGagB","file":"static/js/4.34b53eaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogues\":\"Dialogues_dialogues__354Nx\",\"dialogues_item\":\"Dialogues_dialogues_item__2MPDp\",\"dialog\":\"Dialogues_dialog__3dYd8\",\"active\":\"Dialogues_active__SH4bY\",\"avatar\":\"Dialogues_avatar__nOsHL\",\"container\":\"Dialogues_container__2Q4Jc\",\"messages\":\"Dialogues_messages__1gcX6\",\"message\":\"Dialogues_message__gdX1x\",\"add_massage\":\"Dialogues_add_massage__3xaiH\"};","import React from 'react';\r\nimport s from '../Dialogues.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction DialoguesItem(props) {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img className={s.avatar} src=\"https://99px.ru/sstorage/56/2019/09/mid_324597_239159.jpg\"/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default DialoguesItem;\r\n","import React from 'react';\r\nimport s from '../Dialogues.module.css';\r\n\r\nfunction MessagesItem(props) {\r\n    return (\r\n        <div className={s.message}><p>{props.message}</p></div>\r\n    );\r\n}\r\n\r\nexport default MessagesItem;\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport s from \"./Dialogues.module.css\";\r\nimport {FormControl} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst DialogForm = (props) => {\r\n    return (\r\n        <div className={s.add_massage}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field el={\"textarea\"} name=\"message\" component={FormControl} validate={[required, maxLength100]}/>\r\n                <button>Add Message</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose(reduxForm({form: 'dialogMessage'}))(DialogForm);\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogues.module.css';\r\nimport DialoguesItem from './DialogsItem/DialoguesItem';\r\nimport MessagesItem from './MessagesItem/MessagesItem';\r\nimport DialogForm from \"./DialogForm\";\r\n\r\nfunction Dialogues(props) {\r\n\r\n    let dialogs = props.dialogs.map(dialog => <DialoguesItem id={dialog.id} name={dialog.name} key={dialog.id}/>);\r\n    let messagues = props.messagues.map(message => <MessagesItem message={message.message} key={message.id}/>);\r\n\r\n    let onSubmit = (value) => {\r\n        props.addDialogMessage(value.message)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogues}>\r\n            <div className={s.dialogues_item}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={s.container}>\r\n                <div className={s.messages}>\r\n                    {messagues}\r\n                </div>\r\n                <DialogForm onSubmit={onSubmit}\r\n                            newMessageText={props.newMessageText}\r\n                            addDialogMessage={props.addDialogMessage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogues;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport {addDialogMessage} from \"../../redux/dialog-reducer.js\";\r\nimport Dialogues from \"./Dialogues\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n/*function DialoguesContainer(props) {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    let state = store.getState();\r\n\r\n                    let onAddMessage = () => {\r\n                        store.dispatch(addDialogMessageActionCreator());\r\n                    };\r\n                    let onChangeValue = (text) => {\r\n                        let action = updateNewMessageTextActionCreator(text);\r\n                        store.dispatch(action);\r\n                    };\r\n                    return <Dialogues\r\n                        updateNewMessageText={onChangeValue}\r\n                        addDialogMessage={onAddMessage}\r\n                        newMessageText={state.dialoguesPage.newMessageText}\r\n                        dialogs={state.dialoguesPage.dialogs}\r\n                        messagues={state.dialoguesPage.messagues}\r\n                    />\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n\r\n    );\r\n\r\n\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialoguesPage.dialogs,\r\n        newMessageText: state.dialoguesPage.newMessageText,\r\n        messagues: state.dialoguesPage.messagues,\r\n    }\r\n};\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageText: (text) => {\r\n            let action = updateNewMessageTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addDialogMessage: () => {\r\n            dispatch(addDialogMessageActionCreator());\r\n        }\r\n    }\r\n};*/\r\n\r\nconst DialoguesContainer = compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {addDialogMessage})\r\n)(Dialogues);\r\n\r\n\r\nexport default DialoguesContainer;\r\n"],"sourceRoot":""}