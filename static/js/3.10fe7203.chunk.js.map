{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusHook","props","useState","editMode","setEditMode","status","setStatus","useEffect","activateEditMode","onDoubleClick","autoFocus","onBlur","updateProfileStatus","onChange","e","currentTarget","value","type","ProfileInfo","socLinks","Object","entries","profile","contacts","map","key","val","id","className","s","bg_content","src","description_block","user_info","fullName","photos","large","social_link","aboutMe","lookingForAJob","Profile","main_content","MyPosts","postData","addPost","ProfileContainer","console","log","userId","this","match","params","curentUserId","history","push","getUserProfile","getProfileStatus","Preloader","compose","withRouter","connect","state","fake","usersPage","profilePage","post","newPostText","auth","isAuth"],"mappings":"qIACAA,EAAOC,QAAU,CAAC,WAAa,gCAAgC,kBAAoB,uCAAuC,UAAY,+BAA+B,YAAc,mC,4JCEvJC,IAAMC,U,OC+CnBC,MA9Cf,SAA2BC,GAAQ,IAAD,EAEEC,oBAAS,GAFX,mBAEvBC,EAFuB,KAEbC,EAFa,OAGFF,mBAASD,EAAMI,QAHb,mBAGvBA,EAHuB,KAGfC,EAHe,KAK9BC,qBACI,WACID,EAAUL,EAAMI,UAEpB,CAACJ,EAAMI,SAGX,IAAMG,EAAmB,WACrBJ,GAAY,IAYhB,OAEI,8BACMD,GACF,6BACKF,EAAMI,OACH,0BAAMI,cAAeD,GAAmBP,EAAMI,QAC9C,0BAAMI,cAAeD,GAArB,YAIPL,GACD,6BACI,2BAAOO,WAAW,EAAMC,OAlBT,WACvBP,GAAY,GACZH,EAAMW,oBAAoBP,IAgBkCQ,SAtB1C,SAACC,GACnBR,EAAUQ,EAAEC,cAAcC,QAqB2DC,KAAK,OAC3ED,MAAOX,OCLfa,MAjCf,SAAqBjB,GACjB,IAAIkB,EAAWC,OAAOC,QAAQpB,EAAMqB,QAAQC,UAAUC,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YACtD,yBAAKD,IAAKA,EAAIE,IACTD,EAAM,8BAAOD,EAAP,MAAeC,GAAc,OAI5C,OACI,6BACI,yBAAKE,UAAWC,IAAEC,YACd,yBAAKC,IAAI,yIAEb,yBAAKH,UAAWC,IAAEG,mBACd,yBAAKJ,UAAWC,IAAEI,WACd,6BACI,4BAAKhC,EAAMqB,QAAQY,UACnB,yBAAKH,IAAK9B,EAAMqB,QAAQa,OAAOC,QAC/B,kBAAC,EAAD,CAAmB/B,OAAQJ,EAAMI,OAAQO,oBAAqBX,EAAMW,uBAExE,yBAAKgB,UAAWC,IAAEQ,aACZlB,EACF,2BAAIlB,EAAMqB,QAAQgB,SAClB,oGACA,2BAAIrC,EAAMqB,QAAQiB,eAAiB,eAAO,2BCVnDC,MAZf,SAAiBvC,GACT,OACI,yBAAK2B,UAAWC,IAAEY,cACd,kBAAC,EAAD,CAAanB,QAASrB,EAAMqB,QAASjB,OAAQJ,EAAMI,OAAQO,oBAAqBX,EAAMW,sBACtF,kBAAC8B,EAAA,EAAD,CACIC,SAAU1C,EAAM0C,SAChBC,QAAS3C,EAAM2C,Y,sBCC7BC,E,kLAIEC,QAAQC,IAAI,oBACZ,IAAIC,EAASC,KAAKhD,MAAMiD,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKhD,MAAMmD,eAEhBH,KAAKhD,MAAMoD,QAAQC,KAAK,UAGhCL,KAAKhD,MAAMsD,eAAeP,GAC1BC,KAAKhD,MAAMuD,iBAAiBR,K,+BAK5B,OADAF,QAAQC,IAAI,iBACPE,KAAKhD,MAAMqB,QAIR,kBAAC,EAAY2B,KAAKhD,OAHf,kBAACwD,EAAA,EAAD,U,GAnBY3D,IAAMC,WAyCtB2D,sBACXC,IACAC,aAfkB,SAACC,GAEnB,OADAf,QAAQC,IAAI,0BACL,CACHe,KAAMD,EAAME,UAAUD,KACtBnB,SAAUkB,EAAMG,YAAYC,KAC5BC,YAAaL,EAAMG,YAAYE,YAC/B5C,QAASuC,EAAMG,YAAY1C,QAC3B8B,aAAcS,EAAMM,KAAKnB,OACzB3C,OAAQwD,EAAMG,YAAY3D,OAC1B+D,OAAQP,EAAMM,KAAKC,UAME,CACrBxB,YACAW,mBACAC,qBACA5C,0BANO8C,CAQbb","file":"static/js/3.10fe7203.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg_content\":\"ProfileInfo_bg_content__1AyVF\",\"description_block\":\"ProfileInfo_description_block__1wPIB\",\"user_info\":\"ProfileInfo_user_info__3Dl-L\",\"social_link\":\"ProfileInfo_social_link__3v4vm\"};","import React from \"react\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateProfileStatus(this.state.status)\r\n    };\r\n\r\n    onChangeValue = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    {this.props.status ?\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status}</span> :\r\n                        <span onDoubleClick={this.activateEditMode}>-------</span>\r\n                    }\r\n\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={this.deactivateEditMode} onChange={this.onChangeValue} type=\"text\" value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {updateProfileStatus} from \"../../../../redux/profile-reducer\";\r\n\r\n\r\nfunction ProfileStatusHook(props) {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(\r\n        () => {\r\n            setStatus(props.status)\r\n        },\r\n        [props.status],\r\n    );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const onChangeValue = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateProfileStatus(status)\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                {props.status ?\r\n                    <span onDoubleClick={activateEditMode}>{props.status}</span> :\r\n                    <span onDoubleClick={activateEditMode}>-------</span>\r\n                }\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onChangeValue} type=\"text\"\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusHook;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusHook from \"./ProfileStatus/ProfileStatusHook\";\r\n\r\nfunction ProfileInfo(props) {\r\n    let socLinks = Object.entries(props.profile.contacts).map(([key, val]) => (\r\n        <div key={key.id}>\r\n            {val ? <span>{key} : {val}</span> : ''}\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.bg_content}>\r\n                <img src='https://sites.google.com/site/prirodanasevseegooglgfgf/_/rsrc/1463456237313/home/priroda_gory_nebo_ozero_oblaka_81150_1920x1080.jpg'/>\r\n            </div>\r\n            <div className={s.description_block}>\r\n                <div className={s.user_info}>\r\n                    <div>\r\n                        <h1>{props.profile.fullName}</h1>\r\n                        <img src={props.profile.photos.large}/>\r\n                        <ProfileStatusHook status={props.status} updateProfileStatus={props.updateProfileStatus}/>\r\n                    </div>\r\n                    <div className={s.social_link}>\r\n                        { socLinks }\r\n                        <p>{props.profile.aboutMe}</p>\r\n                        <h3>Ищешь работу?</h3>\r\n                        <p>{props.profile.lookingForAJob ? 'Да' : 'Нет'}</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nfunction Profile(props) {\r\n        return (\r\n            <div className={s.main_content}>\r\n                <ProfileInfo profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus}/>\r\n                <MyPosts\r\n                    postData={props.postData}\r\n                    addPost={props.addPost}\r\n                />\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    addPost,\r\n    getProfileStatus,\r\n    getUserProfile,\r\n    updateProfileStatus\r\n} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        console.log('ComponentProfile')\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.curentUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getProfileStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        console.log('RenderProfile')\r\n        if (!this.props.profile) {\r\n            return <Preloader />\r\n        }else {\r\n            return (\r\n                <Profile {...this.props}/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    console.log('mapStateToPropsProfile')\r\n    return {\r\n        fake: state.usersPage.fake,\r\n        postData: state.profilePage.post,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n        curentUserId: state.auth.userId,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        addPost,\r\n        getUserProfile,\r\n        getProfileStatus,\r\n        updateProfileStatus,\r\n    })\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}